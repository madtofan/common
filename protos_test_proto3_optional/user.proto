syntax = "proto3";
package user;

service User {
  rpc Login(LoginRequest) returns (UserResponse);
  rpc Register(RegisterRequest) returns (UserResponse);
  rpc VerifyRegistration(VerifyRegistrationRequest) returns (UserResponse);
  rpc VerifyToken(VerifyTokenRequest) returns (VerifyTokenResponse);
  rpc GetUser(GetUserRequest) returns (UserResponse);
  rpc Update(UpdateRequest) returns (UserResponse);
  rpc RefreshToken(RefreshTokenRequest) returns (UserResponse);
  rpc AddPermission(RolesPermissionsRequest) returns (StatusMessageResponse);
  rpc DeletePermission(RolesPermissionsRequest) returns (StatusMessageResponse);
  rpc AddRole(RolesPermissionsRequest) returns (StatusMessageResponse);
  rpc DeleteRole(RolesPermissionsRequest) returns (StatusMessageResponse);
  rpc AuthorizeRole(Role) returns (StatusMessageResponse);
  rpc RevokeRole(Role) returns (StatusMessageResponse);
  rpc ListRoles(GetListRequest) returns (ListResponse);
  rpc ListPermissions(GetListRequest) returns (ListResponse);
}

message LoginRequest {
  string email = 1;
  string password = 2;
}

message RefreshRequest {
  int64 id = 1;
  string token = 2;
}

message RegisterRequest {
  string email = 1;
  string password = 2;
  string first_name = 3;
  string last_name = 4;
}

message VerifyRegistrationRequest { int64 id = 1; }

message VerifyTokenRequest {
  int64 id = 1;
  string token = 2;
}

message GetUserRequest { int64 id = 1; }

message UpdateRequest {
  int64 id = 1;
  message UpdateFields {
    optional string password = 2;
    optional string first_name = 3;
    optional string last_name = 4;
    optional string bio = 5;
    optional string image = 6;
  }
  UpdateFields fields = 2;
}

message RefreshTokenRequest {
  int64 id = 1;
  string token = 2;
}

message RolesPermissionsRequest { string name = 1; }

message Role {
  string name = 1;
  repeated string permissions = 2;
}
message UserResponse {
  int64 id = 1;
  string email = 2;
  string first_name = 3;
  string last_name = 4;
  optional string bio = 5;
  optional string image = 6;
  optional string token = 7;
  repeated Role roles = 8;
}

message VerifyTokenResponse { bool valid = 1; }

message StatusMessageResponse { string message = 1; }

message GetListRequest {
  int64 offset = 1;
  int64 limit = 2;
}

message RolePermission {
  int64 id = 1;
  string name = 2;
}

message ListResponse {
  repeated RolePermission list = 1;
  int64 count = 2;
}
